(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function e(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(s){if(s.ep)return;s.ep=!0;const a=e(s);fetch(s.href,a)}})();const h=Object.freeze({DRAW_THEN_SHUFFLE:1,SEARCH_BY_ID_THEN_SHUFFLE:2});class m{deck;hand;constructor(t,e){this.deck=t,this.hand=e}apply(){const t=this.deck.drawCard();this.deck.shuffle(),t&&this.hand.addOneCard(t)}}class E{deck;hand;cardId;constructor(t,e,r){this.deck=t,this.hand=e,this.cardId=r}apply(){const t=this.deck.getCardById(this.cardId);this.deck.shuffle(),t&&this.hand.addOneCard(t)}}class C{id;name;description;effect;effectMeta;constructor(t){this.id=t.id,this.name=t.name,this.description=t.description,this.effect=null,this.effectMeta=null,t.effect&&(this.effectMeta=t.effect)}setEffectBasedOnType(t,e){if(this.effectMeta)switch(this.effectMeta.type){case h.DRAW_THEN_SHUFFLE:this.effect=new m(t,e);break;case h.SEARCH_BY_ID_THEN_SHUFFLE:this.effect=new E(t,e,this.effectMeta.target);break}}getId(){return this.id}getName(){return this.name}getDescription(){return this.description}getEffect(){return this.effect}}class g{name;initialDrawAfterFirstShuffle;drawQuantityInEachTurn;cards;constructor(t){this.name=t.name,this.initialDrawAfterFirstShuffle=t.initialDrawAfterFirstShuffle,this.drawQuantityInEachTurn=t.drawQuantityInEachTurn,this.cards=[],t.cards.forEach(e=>{for(let r=0;r<e.quantity;r++)this.cards.push(new C(e))})}getName(){return this.name}getInitialDraw(){return this.initialDrawAfterFirstShuffle}getDrawInEachTurn(){return this.drawQuantityInEachTurn}getCards(){return this.cards}shuffle(){let t=this.cards;for(let e=t.length-1;e>=1;e--){let r=Math.floor(Math.random()*(e+1));[t[e],t[r]]=[t[r],t[e]]}}drawInitialQuantity(){return this.shuffle(),this.cards.splice(0,this.initialDrawAfterFirstShuffle)}drawCard(){return this.cards.length>0?this.cards.shift():null}getCardById(t){if(this.cards.length>0)return this.cards.find(e=>e.getId()==t)}}class I{cards;constructor(){this.cards=[]}addOneCard(t){this.cards.push(t)}removeCard(t){let e=this.cards[t];return this.cards=this.cards.filter((r,s)=>t!=s),e}getCards(){return this.cards}setInitialHand(t){this.cards=t}}class w{root;text;constructor(t){this.root=document.createElement("div"),this.text=document.createElement("p"),this.text.innerText="Deck",this.root.classList.add("deck-ui"),this.text.classList.add("deck-ui-text"),this.root.appendChild(this.text),t?.appendChild(this.root)}onClick(t){this.root.addEventListener("click",t)}}class y{root;text;clickHandler;constructor(t,e){this.root=document.createElement("div"),this.text=document.createElement("p"),this.text.innerText=e,this.root.classList.add("hand-ui-card"),this.root.appendChild(this.text),t.appendChild(this.root)}onClick(t){this.clickHandler=t,this.root.addEventListener("click",this.clickHandler)}removeOnClickHandler(){this.root.removeEventListener("click",this.clickHandler)}}class k{root;hand;cards;constructor(t,e){this.hand=t,this.root=document.createElement("div"),this.root.classList.add("hand-ui"),this.updateUI(),e?.appendChild(this.root)}addEventHandler(t,e){t.onClick(()=>{this.hand.removeCard(e).getEffect()?.apply(),this.cards.forEach(s=>s.removeOnClickHandler()),this.updateUI()})}updateUI(){let t=this.hand.getCards();this.root.hasChildNodes()&&this.root.replaceChildren(),this.cards=[],t.forEach((e,r)=>{this.cards.push(new y(this.root,e.getName())),this.addEventHandler(this.cards[r],r)})}}const l=document.getElementById("app"),p=document.getElementById("file-input"),o=document.getElementById("load-deck-btn");let n=null,d=null,f=null,u=!1;function v(){u||(o.classList.add("load-deck-btn-when-game-started"),o.addEventListener("animationend",()=>{u=!0;const t=new w(l),e=new k(d,l);t.onClick(()=>{let r;r=n.drawCard(),r&&(d.addOneCard(r),e.updateUI())})}))}p.addEventListener("change",i=>{const e=i.target.files[0],r=new FileReader;e&&e.type=="application/json"&&(r.onloadend=()=>{f=JSON.parse(r.result),n=new g(f),d=new I,n.getCards().forEach(s=>s.setEffectBasedOnType(n,d)),d.setInitialHand(n.drawInitialQuantity()),v()},r.readAsText(e))});o.addEventListener("click",i=>p.click());
